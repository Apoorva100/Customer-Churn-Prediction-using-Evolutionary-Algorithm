import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
import tensorflow as tf
from tensorflow import keras

# Load data
data = pd.read_csv("//content//newcsv.csv")

# Split data into features (X) and target (y)
X = data.iloc[:,:-1].values
y = data.iloc[:,-1].values

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, test_size=0.3, random_state=0, stratify=y)
y_train = np.array(y_train).reshape(-1)
y_test = np.array(y_test).reshape(-1)

# Scale data
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)


# Define model

model = keras.Sequential([
    keras.layers.Dense(18, activation='sigmoid', input_shape=(9,)),
    keras.layers.Dense(1, activation='sigmoid')
])


# Compile model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train model
history = model.fit(X_train, y_train, epochs=1000, validation_data=(X_test, y_test))

# Plot training and testing accuracy
plt.plot(np.log(history.epoch), history.history['accuracy'], label='training accuracy')
plt.plot(np.log(history.epoch), history.history['val_accuracy'], label='testing accuracy')
plt.legend()
plt.xlabel('log(number of weight updates)')
plt.ylabel('Accuracy')
plt.show()

# Predict target values for training data
y_train_pred = model.predict(X_train)
y_train_pred = np.round(y_train_pred)
y_train_pred = np.array(np.greater(y_train_pred, 0.5), dtype=int)

# Plot confusion matrix for training data
cm_train = confusion_matrix(y_train, y_train_pred)
print("Confusion matrix for training data:")
print(cm_train)

# Predict target values for test data
y_test_pred = model.predict(X_test)
y_test_pred = np.round(y_test_pred)
y_test_pred = np.array(np.greater(y_test_pred, 0.5), dtype=int)

# Plot confusion matrix for test data
cm_test = confusion_matrix(y_test, y_test_pred)
print("Confusion matrix for test data:")
print(cm_test)
